-- OBS: Os inserts e as consultas est√£o no arquivo .sql

CREATE DATABASE desafio_final;
USE desafio_final;  

CREATE TABLE Cliente (
    ID_Cliente INTEGER PRIMARY KEY,
    Nome VARCHAR(100),
    Email VARCHAR(100),
    CPF VARCHAR(14),
    Telefone VARCHAR(20),
    Endereco VARCHAR(255)
);

CREATE TABLE Fornecedor (
    ID_Fornecedor INTEGER PRIMARY KEY,
    Nome_Fornecedor VARCHAR(100),
    Contato VARCHAR(100),
    Endereco VARCHAR(255),
    Produtos_Fornecidos VARCHAR(255),
    CNPJ VARCHAR(18)
);

CREATE TABLE Departamento (
    ID_Departamento INTEGER PRIMARY KEY,
    Nome_Departamento VARCHAR(100),
    Responsavel VARCHAR(100),
    Localizacao VARCHAR(100)
);

CREATE TABLE Vendedor (
    ID_Vendedor INTEGER PRIMARY KEY,
    Nome_Funcionario VARCHAR(100),
    Cargo VARCHAR(50),
    Salario DECIMAL(10,2),
    Telefone VARCHAR(20),
    Data_Admissao DATE,
    ID_Departamento INTEGER,
    FOREIGN KEY (ID_Departamento) REFERENCES Departamento(ID_Departamento)
);

CREATE TABLE Produto (
    ID_Produto INTEGER PRIMARY KEY,
    Nome_Produto VARCHAR(100),
    Categoria VARCHAR(50),
    Preco DECIMAL(10,2),
    Descricao TEXT,
    ID_Fornecedor INTEGER,
    FOREIGN KEY (ID_Fornecedor) REFERENCES Fornecedor(ID_Fornecedor)
);

CREATE TABLE Estoque (
    ID_Estoque INTEGER PRIMARY KEY,
    Quantidade_Disponivel INTEGER,
    Data_Atualizacao DATE,
    Localizacao_Estoque VARCHAR(100),
    ID_Produto INTEGER,
    FOREIGN KEY (ID_Produto) REFERENCES Produto(ID_Produto)
);

CREATE TABLE Pedido (
    ID_Pedido INTEGER PRIMARY KEY,
    Status_Pedido VARCHAR(50),
    Total DECIMAL(10,2),
    Data_Pedido DATE,
    ID_Cliente INTEGER,
    ID_Vendedor INTEGER,
    FOREIGN KEY (ID_Cliente) REFERENCES Cliente(ID_Cliente),
    FOREIGN KEY (ID_Vendedor) REFERENCES Vendedor(ID_Vendedor)
);

CREATE TABLE Item_Pedido (
    ID_Item INTEGER PRIMARY KEY,
    Quantidade INTEGER,
    Preco_Unitario DECIMAL(10,2),
    Subtotal DECIMAL(10,2),
    ID_Pedido INTEGER,
    ID_Produto INTEGER,
    FOREIGN KEY (ID_Pedido) REFERENCES Pedido(ID_Pedido),
    FOREIGN KEY (ID_Produto) REFERENCES Produto(ID_Produto)
);

CREATE TABLE Pagamento (
    ID_Pagamento INTEGER PRIMARY KEY,
    Tipo_Pagamento VARCHAR(50),
    Status_Pagamento VARCHAR(50),
    Data_Pagamento DATE,
    Valor DECIMAL(10,2),
    ID_Pedido INTEGER,
    FOREIGN KEY (ID_Pedido) REFERENCES Pedido(ID_Pedido)
);